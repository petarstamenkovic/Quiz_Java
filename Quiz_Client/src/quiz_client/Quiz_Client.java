
package quiz_client;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.OutputStreamWriter;
import java.io.PrintWriter;
import java.net.Socket;
import java.util.Enumeration;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.AbstractButton;
import javax.swing.ButtonModel;
import javax.swing.JButton;
import javax.swing.JComboBox;
import javax.swing.JRadioButton;
import javax.swing.JTextArea;


public class Quiz_Client extends javax.swing.JFrame {

    private Socket socket;
    private BufferedReader br;
    private PrintWriter pw;
    private RecieveMessageFromServer rmfs;
    
    public Quiz_Client() {
        initComponents();
    }

    public Socket getSocket() {
        return socket;
    }

    public void setSocket(Socket socket) {
        this.socket = socket;
    }

    public BufferedReader getBr() {
        return br;
    }

    public void setBr(BufferedReader br) {
        this.br = br;
    }

    public PrintWriter getPw() {
        return pw;
    }

    public void setPw(PrintWriter pw) {
        this.pw = pw;
    }


    public JComboBox<String> getAllPlayers() {
        return allPlayers;
    }

    public JRadioButton getAnswerA() {
        return answerA;
    }

    public JRadioButton getAnswerB() {
        return answerB;
    }

    public JRadioButton getAnswerC() {
        return answerC;
    }

    public JRadioButton getAnswerD() {
        return answerD;
    }

    public JComboBox<String> getQuestionSet() {
        return questionSet;
    }

    public JButton getHelp5050() {
        return help5050;
    }

    public JButton getHelpFriend() {
        return helpFriend;
    }

    public JButton getHelpSwap() {
        return helpSwap;
    }

    public JButton getAddPlayer() {
        return addPlayer;
    }

    public JTextArea getAddRemovePlayerArea() {
        return addRemovePlayerArea;
    }

    public JButton getRemovePlayer() {
        return removePlayer;
    }

    public JButton getCheckButton() {
        return checkButton;
    }

    public JButton getConnectButton() {
        return connectButton;
    }
    
    public JTextArea getLoginArea() {
        return loginArea;
    }

    public JButton getEnterButton() {
        return enterButton;
    }

    public JButton getStartButton() {
        return startButton;
    }

    public JTextArea getQuestionArea() {
        return questionArea;
    }

    public JButton getQuestionButton() {
        return questionButton;
    }

    public JButton getSubmintAnswerButton() {
        return submintAnswerButton;
    }

    public JButton getLeaderboardButton() {
        return leaderboardButton;
    }

    
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        buttonGroup2 = new javax.swing.ButtonGroup();
        checkButton = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        questionArea = new javax.swing.JTextArea();
        jScrollPane3 = new javax.swing.JScrollPane();
        loginArea = new javax.swing.JTextArea();
        allPlayers = new javax.swing.JComboBox<>();
        helpFriend = new javax.swing.JButton();
        help5050 = new javax.swing.JButton();
        helpSwap = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        questionSet = new javax.swing.JComboBox<>();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        answerA = new javax.swing.JRadioButton();
        answerB = new javax.swing.JRadioButton();
        answerC = new javax.swing.JRadioButton();
        answerD = new javax.swing.JRadioButton();
        leaderboardButton = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();
        addPlayer = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        addRemovePlayerArea = new javax.swing.JTextArea();
        removePlayer = new javax.swing.JButton();
        startButton = new javax.swing.JButton();
        enterButton = new javax.swing.JButton();
        connectButton = new javax.swing.JButton();
        questionButton = new javax.swing.JButton();
        submintAnswerButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        checkButton.setText("Check");
        checkButton.setEnabled(false);
        checkButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                checkButtonActionPerformed(evt);
            }
        });

        questionArea.setColumns(20);
        questionArea.setRows(5);
        questionArea.setEnabled(false);
        jScrollPane2.setViewportView(questionArea);

        loginArea.setColumns(20);
        loginArea.setRows(5);
        loginArea.setEnabled(false);
        jScrollPane3.setViewportView(loginArea);

        allPlayers.setEnabled(false);

        helpFriend.setText("Friend");
        helpFriend.setEnabled(false);

        help5050.setText("50/50");
        help5050.setEnabled(false);
        help5050.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                help5050ActionPerformed(evt);
            }
        });

        helpSwap.setText("Swap Q");
        helpSwap.setEnabled(false);

        jLabel1.setText("Help Options");

        jLabel2.setText("All Players");

        jLabel3.setText("username:password:role");

        questionSet.setEnabled(false);
        questionSet.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                questionSetItemStateChanged(evt);
            }
        });
        questionSet.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                questionSetActionPerformed(evt);
            }
        });

        jLabel4.setText("Question Set");

        jLabel5.setText("Questions");

        jLabel6.setText("Choose your answer");

        buttonGroup1.add(answerA);
        answerA.setText("Answer A");
        answerA.setActionCommand("Answer_A");
        answerA.setEnabled(false);
        answerA.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                answerAActionPerformed(evt);
            }
        });

        buttonGroup1.add(answerB);
        answerB.setText("Answer B");
        answerB.setActionCommand("Answer_B");
        answerB.setEnabled(false);

        buttonGroup1.add(answerC);
        answerC.setText("Answer C");
        answerC.setActionCommand("Answer_C");
        answerC.setEnabled(false);

        buttonGroup1.add(answerD);
        answerD.setText("Answer D");
        answerD.setActionCommand("Answer_D");
        answerD.setEnabled(false);

        leaderboardButton.setText("Leaderboard");
        leaderboardButton.setEnabled(false);
        leaderboardButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                leaderboardButtonActionPerformed(evt);
            }
        });

        addPlayer.setText("Add");
        addPlayer.setEnabled(false);
        addPlayer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addPlayerActionPerformed(evt);
            }
        });

        addRemovePlayerArea.setColumns(20);
        addRemovePlayerArea.setRows(5);
        addRemovePlayerArea.setEnabled(false);
        jScrollPane1.setViewportView(addRemovePlayerArea);

        removePlayer.setText("Remove");
        removePlayer.setEnabled(false);
        removePlayer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                removePlayerActionPerformed(evt);
            }
        });

        startButton.setText("Load/Request Set");
        startButton.setEnabled(false);
        startButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                startButtonActionPerformed(evt);
            }
        });

        enterButton.setText("Enter");
        enterButton.setEnabled(false);
        enterButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                enterButtonActionPerformed(evt);
            }
        });

        connectButton.setText("Connect");
        connectButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                connectButtonActionPerformed(evt);
            }
        });

        questionButton.setText("Get Question");
        questionButton.setEnabled(false);
        questionButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                questionButtonActionPerformed(evt);
            }
        });

        submintAnswerButton.setText("Submit");
        submintAnswerButton.setEnabled(false);
        submintAnswerButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                submintAnswerButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(allPlayers, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(questionSet, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(answerD, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(answerC, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(answerB, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(answerA, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 292, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(questionButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(submintAnswerButton, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(26, 26, 26))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(leaderboardButton))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addGap(33, 33, 33)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 236, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(connectButton))
                                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 262, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 281, Short.MAX_VALUE)
                                        .addComponent(helpFriend))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(279, 279, 279)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(helpSwap, javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(help5050, javax.swing.GroupLayout.Alignment.TRAILING)))))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(checkButton)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(enterButton)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(startButton, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addComponent(addPlayer, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(removePlayer, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 236, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel7)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addGap(38, 38, 38))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(9, 9, 9)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jLabel4)
                    .addComponent(jLabel5))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 179, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(allPlayers, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(questionSet, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel6)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(answerA))
                    .addComponent(leaderboardButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(answerB)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(answerC)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(answerD)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 22, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(addPlayer)
                    .addComponent(removePlayer)
                    .addComponent(questionButton)
                    .addComponent(submintAnswerButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(22, 22, 22)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel7)
                            .addComponent(jLabel1))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(helpFriend)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(help5050)
                    .addComponent(jLabel3))
                .addGap(5, 5, 5)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(helpSwap)
                        .addComponent(connectButton)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(checkButton)
                    .addComponent(startButton)
                    .addComponent(enterButton))
                .addGap(18, 18, 18))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents



    // Try to remove update players by somehow automaticly updating player list in this function
    private void checkButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_checkButtonActionPerformed
         String login_info = this.getLoginArea().getText();
         this.pw.println(login_info);
     
    }//GEN-LAST:event_checkButtonActionPerformed

    private void help5050ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_help5050ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_help5050ActionPerformed

    private void answerAActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_answerAActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_answerAActionPerformed

    private void leaderboardButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_leaderboardButtonActionPerformed
        this.pw.println("Leaderboard");
    }//GEN-LAST:event_leaderboardButtonActionPerformed

    private void questionSetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_questionSetActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_questionSetActionPerformed

    private void questionSetItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_questionSetItemStateChanged
        // TODO add your handling code here:
    }//GEN-LAST:event_questionSetItemStateChanged

    private void enterButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_enterButtonActionPerformed
       this.pw.println("Enter_update");
       this.enterButton.setEnabled(false);
       this.checkButton.setEnabled(false);
       this.startButton.setEnabled(true);
    }//GEN-LAST:event_enterButtonActionPerformed

    private void connectButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_connectButtonActionPerformed
        try {
            this.socket = new Socket("127.0.0.1", 6001);
            this.br = new BufferedReader(new InputStreamReader(this.socket.getInputStream()));
            this.pw = new PrintWriter(new OutputStreamWriter(this.socket.getOutputStream()), true);
            this.rmfs = new RecieveMessageFromServer(this);
            Thread thr = new Thread(rmfs);
            thr.start();
            this.pw.println("Connect");
        } catch (IOException ex) {
            Logger.getLogger(Quiz_Client.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_connectButtonActionPerformed

    // Fetch the set of questions and begin
    private void startButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_startButtonActionPerformed
        String active_set = (String) this.questionSet.getSelectedItem();
        System.out.println("Start:" + active_set);
        this.pw.println("Start:" + active_set);
        questionButton.setEnabled(true);
        this.leaderboardButton.setEnabled(true);
        
    }//GEN-LAST:event_startButtonActionPerformed

    private void questionButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_questionButtonActionPerformed
        this.pw.println("NewQuestion");
        this.questionButton.setEnabled(false);
        this.submintAnswerButton.setEnabled(true);
    }//GEN-LAST:event_questionButtonActionPerformed

    private void addPlayerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addPlayerActionPerformed
        String addPlayer = this.getAddRemovePlayerArea().getText();
        this.pw.println("AddPlayer"+","+addPlayer);
    }//GEN-LAST:event_addPlayerActionPerformed

    private void removePlayerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_removePlayerActionPerformed
         String removePlayer = this.getAddRemovePlayerArea().getText();
         this.pw.println("RemovePlayer"+","+removePlayer);
    }//GEN-LAST:event_removePlayerActionPerformed

    private void submintAnswerButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_submintAnswerButtonActionPerformed
        ButtonModel selectedRadioButtonModel = this.buttonGroup1.getSelection();
        if (selectedRadioButtonModel != null) 
        {
            Enumeration<AbstractButton> buttons = buttonGroup1.getElements();
            while (buttons.hasMoreElements()) {
                AbstractButton button = buttons.nextElement();
                if (button.getModel() == selectedRadioButtonModel) {
                    JRadioButton selectedRadioButton = (JRadioButton) button;
                    String selectedButton = selectedRadioButton.getActionCommand();
                    String answer_text = selectedRadioButton.getText();
                    System.out.println(selectedButton);
                    System.out.println(answer_text); // Print the text of the selected radio button
                    this.pw.println("NewAnswer:"+selectedButton+":"+answer_text);
                    this.buttonGroup1.clearSelection();
                    break;
                }
            }
        } 
        else 
        {
            System.out.println("No radio button selected");
        }
        this.questionButton.setEnabled(true);
        this.submintAnswerButton.setEnabled(false);
    }//GEN-LAST:event_submintAnswerButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Quiz_Client.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Quiz_Client.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Quiz_Client.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Quiz_Client.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Quiz_Client().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addPlayer;
    private javax.swing.JTextArea addRemovePlayerArea;
    private javax.swing.JComboBox<String> allPlayers;
    private javax.swing.JRadioButton answerA;
    private javax.swing.JRadioButton answerB;
    private javax.swing.JRadioButton answerC;
    private javax.swing.JRadioButton answerD;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.ButtonGroup buttonGroup2;
    private javax.swing.JButton checkButton;
    private javax.swing.JButton connectButton;
    private javax.swing.JButton enterButton;
    private javax.swing.JButton help5050;
    private javax.swing.JButton helpFriend;
    private javax.swing.JButton helpSwap;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JButton leaderboardButton;
    private javax.swing.JTextArea loginArea;
    private javax.swing.JTextArea questionArea;
    private javax.swing.JButton questionButton;
    private javax.swing.JComboBox<String> questionSet;
    private javax.swing.JButton removePlayer;
    private javax.swing.JButton startButton;
    private javax.swing.JButton submintAnswerButton;
    // End of variables declaration//GEN-END:variables
}
